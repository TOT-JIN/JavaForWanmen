package com.dataapplab.springboot.example;

import java.math.BigDecimal;
import java.math.MathContext;
/**
 * 
 * @author joshuaz
 * Avoid working with non-integral values while using double (calculate in the smallest currency units).
 * Round any multiplication/division results using Math.round/rint/ceil/floor (per your system requirements).
 */
public class ExampleApp {
	public static void main(String[] args){
		System.out.println( "362.2 - 362.6 = " + ( 362.2 - 362.6 ) );

		System.out.println( "362.2 - 362.6 = " + ( new BigDecimal( "362.2" ) - new BigDecimal( "362.6" ) ) );
	
		int res = 0;
		final BigDecimal orig = new BigDecimal( "362.2" );
		final BigDecimal mult = new BigDecimal( "0.015" ); //1.5%
		for ( int i = 0; i < 10; ++i )
		{
		    final BigDecimal result = orig.multiply( mult, MathContext.DECIMAL64 );
		    if ( result != null ) res++;
		}
		
		int dRes = 0;
		final double dorig = 36220; //362.2 in cents
		final double dmult = 0.015; //1.5%
		for ( int i = 0; i < 10; ++i )
		{
		    final long result = Math.round( dorig * dmult );
		    if ( result != 543 ) dRes++;    //543.3 cents actually
		}
	}
}
